name: Android CI
env:
  # Module names for your project
  app_module: app
  # Project name
  project_name: CosmicCanvas
on:
  push:
    branches:
      - 'main'
    tags:
      - "v*"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for commit messages
      
      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      
      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      
      # Extract version from build.gradle.kts
      - name: Extract version information
        run: |
          # CosmicCanvas version
          APP_VERSION=$(grep -o 'versionName = "[^"]*"' ${{ env.app_module }}/build.gradle.kts | cut -d'"' -f2)
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          
          # Use app version for the release tag (you can modify this as needed)
          echo "RELEASE_VERSION=$APP_VERSION" >> $GITHUB_ENV
      
      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      # App Build
      - name: Build CosmicCanvas APK
        run: |
          chmod +x ./gradlew
          ./gradlew assembleDebug
          ./gradlew assembleRelease
      
      # Upload CosmicCanvas Debug APK as artifact
      - name: Upload CosmicCanvas APK Debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.project_name }} - Debug APK
          path: ${{ env.app_module }}/build/outputs/apk/debug/
          retention-days: 14
      
      # Upload CosmicCanvas Release APK as artifact
      - name: Upload CosmicCanvas APK Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.project_name }} - Release APK
          path: ${{ env.app_module }}/build/outputs/apk/release/
          retention-days: 14
      
      # Generate changelog from commits since last tag
      - name: Generate Changelog
        id: changelog
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found, including all commits"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            echo "Previous tag: $PREVIOUS_TAG"
            CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse)
          fi
          
          # For debugging
          echo "Generated changelog:"
          echo "$CHANGELOG"
          
          # Write changelog to file for later use
          echo "$CHANGELOG" > changelog.txt
          
          # Set output for this step to be used later
          echo "changelog_text<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      # Rename APKs for easier identification
      - name: Rename APKs
        run: |
          mkdir -p release_files
          cp ${{ env.app_module }}/build/outputs/apk/debug/*.apk release_files/CosmicCanvas-${{ env.APP_VERSION }}-debug.apk
          cp ${{ env.app_module }}/build/outputs/apk/release/*.apk release_files/CosmicCanvas-${{ env.APP_VERSION }}-release.apk
          
      # Create release notes with changelog
      - name: Create Release Notes
        run: |
          cat > release_notes.md << EOL
          ## CosmicCanvas Release v${{ env.RELEASE_VERSION }} (${{ env.date_today }})
          
          ### Changes in this release:
          $(cat changelog.txt || echo "- First release")
          
          ### Downloads
          - CosmicCanvas APK v${{ env.APP_VERSION }} (Debug & Release)
          
          Built automatically using GitHub Actions.
          EOL
          
          # Display release notes for debugging
          echo "Release notes content:"
          cat release_notes.md
  
      # Create GitHub Release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          name: Release v${{ env.RELEASE_VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            release_files/CosmicCanvas-${{ env.APP_VERSION }}-debug.apk
            release_files/CosmicCanvas-${{ env.APP_VERSION }}-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}